{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/preet/Documents/GitHub/MictlanFront/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport App from \"next/app\";\nimport { AnimatePresence } from \"framer-motion\";\nimport \"../styles.scss\";\nimport Header from \"./components/Header\";\nimport getConfig from \"next/config\";\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      router = _ref.router,\n      navigation = _ref.navigation;\n  console.log(navigation);\n  return __jsx(AnimatePresence, {\n    exitBeforeEnter: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    key: router.route,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  })));\n}\n\n_c = MyApp;\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nMyApp.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, navigation;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"\".concat(publicRuntimeConfig.API_URL, \"/navigations\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          navigation = _context.sent;\n          return _context.abrupt(\"return\", {\n            navigation: navigation\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/preet/Documents/GitHub/MictlanFront/pages/_app.js"],"names":["React","App","AnimatePresence","Header","getConfig","MyApp","Component","pageProps","router","navigation","console","log","route","publicRuntimeConfig","getInitialProps","fetch","API_URL","res","json"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,KAAT,OAA6D;AAAA,MAA5CC,SAA4C,QAA5CA,SAA4C;AAAA,MAAjCC,SAAiC,QAAjCA,SAAiC;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,SACE,MAAC,eAAD;AAAiB,IAAA,eAAe,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,SAAD,eAAeF,SAAf;AAA0B,IAAA,GAAG,EAAEC,MAAM,CAACI,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAMD;;KARQP,K;;iBAUuBD,SAAS,E;IAAjCS,mB,cAAAA,mB;;AAERR,KAAK,CAACS,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJC,KAAK,WAAIF,mBAAmB,CAACG,OAAxB,kBADD;;AAAA;AAChBC,UAAAA,GADgB;AAAA;AAAA,iBAEGA,GAAG,CAACC,IAAJ,EAFH;;AAAA;AAEhBT,UAAAA,UAFgB;AAAA,2CAGf;AAAEA,YAAAA,UAAU,EAAVA;AAAF,WAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAMA,eAAeJ,KAAf","sourcesContent":["import React from \"react\";\nimport App from \"next/app\";\nimport { AnimatePresence } from \"framer-motion\";\nimport \"../styles.scss\";\nimport Header from \"./components/Header\";\nimport getConfig from \"next/config\";\n\nfunction MyApp({ Component, pageProps, router, navigation }) {\n  console.log(navigation);\n  return (\n    <AnimatePresence exitBeforeEnter>\n      {/* <Header /> */}\n      <Component {...pageProps} key={router.route} />\n    </AnimatePresence>\n  );\n}\n\nconst { publicRuntimeConfig } = getConfig();\n\nMyApp.getInitialProps = async () => {\n  const res = await fetch(`${publicRuntimeConfig.API_URL}/navigations`)\n  const navigation = await res.json()\n  return { navigation }\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}